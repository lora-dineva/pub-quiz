version: '3.8'

services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:15-alpine
    container_name: pub_quiz_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: pub_quiz_db
      POSTGRES_USER: quiz_user
      POSTGRES_PASSWORD: quiz_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - quiz_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quiz_user -d pub_quiz_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Application Service
  backend:
    build: .
    container_name: pub_quiz_backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://quiz_user:quiz_password@postgres:5432/pub_quiz_db
      PYTHONPATH: /app
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app
      - ./backend:/app/backend
      - ./media:/app/media
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - quiz_network
    command: ["python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pub_quiz_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pubquiz.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - quiz_network

# Named volumes for data persistence
volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

# Custom network for service communication
networks:
  quiz_network:
    driver: bridge 